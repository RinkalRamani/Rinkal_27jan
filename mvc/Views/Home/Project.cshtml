
@model mvc.Models.Project

@{
    ViewBag.Title = "Employee";
}
@using (Html.BeginForm("Project", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(T => T.Id)
    <div class="form-horizontal">
        <h4>Employee Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.Department, new List<SelectListItem> {
                new SelectListItem { Value="IT",Text="IT"},
                new SelectListItem { Value="WEB",Text="WEB"},
                new SelectListItem { Value="MOBILE APP",Text="MOBILE APP"},
                new SelectListItem { Value="TECH SUPPORT",Text="TECH SUPPORT"},
                new SelectListItem { Value="GAME DEV",Text="GAME DEV"},
                new SelectListItem { Value="BD", Text="BD"} },
                new { id = "Department", @class = "form-control custom-select-sm" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
               
                @Html.TextBoxFor(model => model.DOB, "{0:MM/dd/yyyy}", new { @class = "form-control", @id = "txtDOB" })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger", @id = "lblError" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" id="btnSubmit" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <script type="text/javascript">
        $(document).ready(function () {
            debugger
            $('#txtDOB').datepicker({
                orientation: "bottom"
            });
            $('#txtDOB').inputmask({ alias: "date" });
        });
        $('#btnSubmit').on('click', function (event) {
            debugger
            var _form = $(this).parents('form');
            var isvalid = _form.valid();
            if (!isvalid) {
                return false;
            }
            if (!ValidateDOB($('#txtDOB').val())) {
                return false;
            }
        });

        function ValidateDOB(dateString) {
            
            var lblError = $("#lblError");
            var parts = dateString.split("/");
            var dtDOB = new Date(parts[0] + "/" + parts[1] + "/" + parts[2]);
            var dtCurrent = new Date();
            lblError.html("Employee Eligibility 18 years only.")
            if (dtCurrent.getFullYear() - dtDOB.getFullYear() < 18) {
                return false;
            }
            if (dtCurrent.getFullYear() - dtDOB.getFullYear() == 18) {
                
                if (dtCurrent.getMonth() < dtDOB.getMonth()) {
                    return false;
                }
                if (dtCurrent.getMonth() == dtDOB.getMonth()) {
                    if (dtCurrent.getDate() < dtDOB.getDate()) {
                        return false;
                    }
                }
            }
            lblError.html("");
            return true;
        }
    </script>

}

